candy_data_untidy %>%
gather(candy)
candy_data_untidy %>%
gather(candy) %>%
tail()
candy_data_untidy %>%
gather(candy, -id)
candy_data_untidy %>%
gather(candy,joy, -id)
stocks
gather(stocks, stock, price, -time)
candy_data_untidy %>%
gather(candy, -id)
candy_data_untidy
candy_data_untidy
candy_data_untidy %>%
gather(candy, -id)
candy_data_untidy %>%
gather(candy,value, -id)
candy_dat
candy_dat <- candy_data_untidy %>%
gather(candy, joy,  -id) %>%  # collects variable and thei values into a new data frame such that each varible is now a row
mutate(joy = joy == "JOY")
candy_dat
write_csv(candy_dat, "candy-joy.csv")
load("trump_tweets_df_rda")
load("trump_tweets_df.rda")
load("trump_tweets_df.rda")
limpse(trump_tweets_df)
glimpse(trump_tweets_df)
str(trump_tweets_df)
typeof(trump_tweets_df)
glimpse(trump_tweets_df)
dim(trump_tweets_df)
trump_tweets_df %>%
head()
dim(trump_tweets_df)
str(trump_tweets_df)
tweets <- trump_tweets_df$text
tweets %>% head() %>% strtrim(70)
tweets %>% head() %>% strtrim(10)
tweets %>%
head() %>% # displays first 6 entries
strtrim(70) # trim to only 70 characters (including space) per entry
regex <- "badly|crazy|weak|spent|strong|dumb|joke|guns|funny|dead"
regrex
regex
tweets <- tweets[c(1, 2, 5, 6, 198, 347, 919)]
tweets %>% strtrim(70)
c(1, 2, 5, 6, 198, 347, 919)
tweets %>% strtrim(70)
```{r}
tweets <- tweets[c(1, 2, 5, 6, 198, 347, 919)]
tweets %>% strtrim(70)
tweets <- trump_tweets_df$text
regex <- "badly|crazy|weak|spent|strong|dumb|joke|guns|funny|dead"
regex
tweets <- tweets[c(1, 2, 5, 6, 198, 347, 919)]
tweets %>%
strtrim(70)
str(matches)
matches <- gregexpr(regex, tweets)
str(matches)
matches
matches[1]
matches[2]
matches <- gregexpr(regex, tweets)
matches[2]
matches[7
matches[7
matches[[7]]
matches[[3]]
matches[[7]]
matches[[7]]
str(matches)
tweets[4]
str_sub(tweets[4],133,135)
str_sub(tweets[4],132,137)
matches <- gregexpr(regex, tweets)
matches[[7]]
str(matches)
str_sub(tweets[4],134,134+4)
matches[[3]]
matches[[3]][1]
matches[[7]]
matches <- gregexpr(regex, tweets)
str(matches)
matches
matches[[7]]
matches[[3]]
matches[[1]]
matches[[3]]
matches[[1]]
matches[[3]]
length(mathces)
length(matches)
lengths(matches)
matches <- gregexpr(regex, tweets)
str(matches)
sapply(matches,lengths)
sapply(matches,length)
vapply(matches,length,integer(1))
map_int(matches,length)
map_int(matches,length)  # purrr approach
attr(x, which='match.length)
mlength(matches)
attr(x, which="match.length")
attr(x, which="match.length")
mlength <- function(x){
attr(x, which="match.length")
}
mlength(matches)
mlength <- function(x){
attr(x, which="match.length")
}
mlength(matches)
mlength <- function(x) {
attr(x, which="match.length")
}
mlength(matches)
map_int(matches,length)  # purrr approach
mlength(matches[[2]])
mlength(matches[[3]])
map(matches,mlength)
map(matches, ~attr(.x,which = "match.length"))
map(matches, ~attr(which = "match.length"))
map(matches, ~attr(.,which = "match.length"))
map(matches, ~attr(.x,which = "match.length"))
map(matches, attr, which = "match.length")
match_length <- map(matches,mlength)
match_length <- map(matches,mlength)
match_length
match_length[1]
match_length[3]
match_length[7]
attr(match_length, which="length"
attr(match_length, which="length")
map(matches,length)
map(matches,sum)
map(match_length,sum)
map(matches,sum)
map(matches,sum(x>0))
map(matches,>0)
map(matches>0)
(matches>0)
matches
matches_length
match_length
match_length > 0
match_length
match_length [1]
match_length [1] > 0
match_length[1] > 0
map(match_length>0)
map(match_length,>0)
map(match_length,sum)
map(match_length,length)
map(match_length,'[')
map(match_length,'[[')
map(match_length,'[[1')
map(match_length,'[1')
map(match_length)
map(match_length,.x>0)
sum(matches>0)
map(matches,fun)
fun <- function(x) {
sum(x > 0)
}
map(matches,fun)
sum(matches>0)
fun2 <- function(x) {
if (x[1] > 0) {
length(x)}
}
map(match_length,fun2)
return(0)
fun2 <- function(x) {
if (x[1] > 0) {
length(x)} else
return(0)
}
map(match_length,fun2)
map(matches,fun)
match_length <- map(matches,mlength)
map_int(matches,~sum(.x > 0))
tibble(
naive_length = lengths(mathces)
n_words =map_int(matches, ~sum(.x > 0))
tibble(
naive_length = lengths(mathces),
n_words =map_int(matches, ~sum(.x > 0))
)
tibble(
naive_length = lengths(matches),
n_words =map_int(matches, ~sum(.x > 0))
)
map(matches, as.vector)
match_first <- map(matches, as.vector)
match_first
matches
match_first
(tweet <- tweets[7])
(t_first <- match_first[[7]])
(t_length <- match_length[[7]])
(t_last <- t_first + t_length - 1)
substring(tweet, t_first, t_last)
(tweet <- tweets[1])
(t_first <- match_first[[1]])
(t_length <- match_length[[1]])
(t_last <- t_first + t_length - 1)
substring(tweet, t_first, t_last)
match_last <- map2(match_first,match_length, ~ .x + .y -1)
match_last
fun_last
fun_last <- function(x,y) {
last <- x + y - 1
}
fun_last(match_first,match_length)
fun_last <- function(x,y) {
last <- x + y - 1
}
fun_last(match_first,match_length)
fun_last <- function(x,y) {
last <- x + y - 1
}
fun_last(match_first,match_length)
match_first
match_length
match_first
match_first + match_length
match_length
match_first
match_first[1] + match_length
match_first[1] + match_length[1]
map2(match_first,match_length,fun_last)
map2(match_first,match_length,fun_last)
pmap(list(text= tweets, first = match_first, last = match_last), substring)
mdf <- tibble(
text = tweets,
first = match_first,
last = match_last
)
pmap(mdf,substring)
tweet_df <- tibble(
text = tweets,
first = match_first,
last = match_last
)
pmap(tweet_df,substring)
tibble(text = tweets,
first = gregexpr(regex, tweets)) %>%
tibble(text = tweets,
first = gregexpr(regex, tweets)) %>%
mutate(match_length = map(first, ~ attr(.x, which = "match.length")),
last = map2(first, match_length, ~.x + .y - 1)) %>%
tibble(text = tweets,
first = gregexpr(regex, tweets)) %>%
mutate(match_length = map(first, ~ attr(.x, which = "match.length")),
last = map2(first, match_length, ~.x + .y - 1)) %>%
select(-match_length) %>%
pmap(substring)
tibble(text = tweets,
first = gregexpr(regex, tweets)) %>%
mutate(match_length = map(first, ~ attr(.x, which = "match.length")),
last = map2(first, match_length, ~.x + .y - 1)) %>%
select(-match_length) %>%
pmap(substring)
tweets <- trump_tweets_df$text
tibble(text = tweets,
first = gregexpr(regex, tweets)) %>%
mutate(match_length = map(first, ~ attr(.x, which = "match.length")),
last = map2(first, match_length, ~.x + .y - 1)) %>%
select(-match_length) %>%
pmap(substring)
TweetWord <- tibble(text = tweets,
first = gregexpr(regex, tweets)) %>%
mutate(match_length = map(first, ~ attr(.x, which = "match.length")),
last = map2(first, match_length, ~.x + .y - 1)) %>%
select(-match_length) %>%
pmap(substring)
TweetWord
TweetWord[1]
lengths(TweetWord[1])
lengths(TweetWord)
TweetWord
lengths(TweetWord)
lengths(TweetWord[1])
TweetWord[1]
TweetWord[919]
TweetWord[1]
length(TweetWord[1])
length(TweetWord[919])
TweetWord[919]
TweetWord[919][1]
TweetWord[919][1]
lengths(TweetWord[919][1])
lengths(TweetWord[1][1])
lengths(TweetWord[3][1])
TweetWord
lengths(TweetWord[5][1])
TweetWord
lengths(TweetWord[[5]][1])
lengths(TweetWord[[5]])
TweetWord[[5]]
nchar(TweetWord[[5]])
nchar(TweetWord[[1]])
map(TweetWord,Extract)
Extract <- funtion(x) {
map(TweetWord,Extract)
nchar(x)
TweetWord
nchar{1](x)
nchar[1](x)
nchar(x[1])
Extract <- funtion(x) {
Extract <- funtion(x) {
TweetWord
TweetWord[[5]]
nchar(TweetWord[[1]])
map_int(TweetWord,Extract)
nchar(TweetWord)
nchar(x)
res <- nchar(x)
Extract <- funtion(x) {
Extract <- function(x) {
res <- nchar(x)
}
map(TweetWord,Extract)
nchar(x)
Extract <- function(x) {
nchar(x)
}
map(TweetWord,Extract)
nchar(TweetWord)
map(TweetWord,Extract)
Num_char > 0
Extract <- function(x) {
Num_char <- nchar(x)
Num_char > 0
}
map(TweetWord,Extract)
sum( Num_char > 0)
Extract <- function(x) {
Num_char <- nchar(x)
sum( Num_char > 0)
}
map(TweetWord,Extract)
Num_char > 0
Extract <- function(x) {
Num_char <- nchar(x)
Num_char > 0
}
map(TweetWord,Extract)
tibble(map(TweetWord,Extract))
map(TweetWord,Extract)
match_first <- map(matches, as.vector)
match_first
aa <- map(TweetWord,Extract)
str_extract(tweets,aa)
str_extract(tweets,aa)
str_extract_all(tweets,aa)
str_subset(tweets,aa)
aa <- map(TweetWord,Extract)
str_subset(tweets,aa)
which(Num_char > 0)
Extract <- function(x) {
Num_char <- nchar(x)
which(Num_char > 0)
}
aa <- map(TweetWord,Extract)
str_(tweets,aa)
aa
which(Num_char > 0)[1]
which(Num_char > 0)
Extract <- function(x) {
Num_char <- nchar(x)
which(Num_char > 0)
}
nchar(TweetWord)
which(nn > 0)
nn <- nchar(TweetWord)
which(nn > 0)
which(Num_char > 0)
Extract <- function(x) {
Num_char <- nchar(x)
which(Num_char > 0)
}
aa <- map(TweetWord,Extract)
aa
which(nn > 0)
Ind <- which(Num_char > 0)
tweets <- tweets[Ind]
Num_char <- nchar(TweetWord)
Ind <- which(Num_char > 0)
tweets <- tweets[Ind]
tweets %>%
strtrim(70)
tweets <- trump_tweets_df$text
TweetWord <- tibble(text = tweets,
first = gregexpr(regex, tweets)) %>%
mutate(match_length = map(first, ~ attr(.x, which = "match.length")),
last = map2(first, match_length, ~.x + .y - 1)) %>%
select(-match_length) %>%
pmap(substring)
TweetWord
TweetWord[Ind]
TweetWord %>%
head()
TweetWord[Ind]
TweetWord[Ind] %>%
head()
tweets[Ind] %>%
strtrim(70)
tweets[Ind] %>%
head() %>%
strtrim(70)
tweets[Ind] %>%
head() %>%
strtrim(80)
TweetWord[Ind] %>%
head()
TWords <- TweetWord[Ind]
tweet_df
tweet_df <- tibble(
text = Ttweets,
Trump_Words = TWords
)
tweet_df <- tibble(
text = Ttweets,
Trump_Words = TWords
)
TWords <- TweetWord[Ind]
Ttweets <- tweets[Ind]
tweet_df <- tibble(
text = Ttweets,
Trump_Words = TWords
)
TWEETS_DF <- tibble(
text = Ttweets,
Trump_Words = TWords
)
TWEETS_DF %>%
head(10) %>%
knitr::kable()
TWEETS_DF %>%
knitr::kable()
TWEETS_DF %>%
head(15) %>%
knitr::kable()
write_csv(TWEETS_DF,"Trump_Tweets.csv")
write_csv(candy_data_untidy, "candy-joy-untidy.csv")
write_csv(TWEETS_DF,"Trump_Tweets.csv")
write_rds(TWEETS_DF,"Trump_Tweets.csv")
write_rds(TWEETS_DF,"Trump_Tweets.rds")
write_rds(TWEETS_DF,"Trump_Tweets.rds")
TWEETS_DF <- tibble(
Tweets = Ttweets,
Trump_Words = list(TWords)
)
TWEETS_DF %>%
head(15) %>%
knitr::kable()
TWEETS_DF <- tibble(
Tweets = Ttweets,
Trump_Words = TWords
)
TWEETS_DF %>%
head(15) %>%
knitr::kable()
saveRDS(TWEETS_DF,"Trump_Tweets.rds")
names(ID_data) %>%
head()
ID_data  %>%
head()
ID_HallCandy_raw %>%
select(aa)  %>%
head()
aa <- c("id", candy_names)
ID_HallCandy_raw %>%
select(aa)  %>%
head()
ID_HallCandy_raw %>%
select(vec_id)  %>%
head()
vec_id <- c("id", candy_names)
vec_id <- c("id", candy_names)
ID_HallCandy_raw %>%
select(vec_id)  %>%
head()
new_name <- str_replace_all(orig_name, "(^\\[)(.*)(\\]$)", "\\2")
str_replace_all(new_name, '["’]', "'")
str_replace_all(new_name, '["’]', "'") %>%
head()
ID_HallCandy_raw %>%
head()
ID_HallCandy_raw %>%
head()
install.packages("devtools")
shiny::runApp('Desktop/STAT545A/stat545_participation/Stat547_Day8_Thurs_15Nov/BC_liquor')
runApp('Desktop/STAT545A/stat545_participation/Stat547_Day8_Thurs_15Nov/BC_liquor')
runApp('Desktop/STAT545A/hw08-iyaniwura/hw08-seed-master/bcl')
shiny::runApp('Desktop/STAT545A/stat545_participation/Stat547_Day8_Thurs_15Nov/BC_liquor')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
setwd("~/Desktop/STAT545A/hw08-iyaniwura/hw08-seed-master/bcl")
rsconnect::deployApp("~/Desktop/STAT545A/hw08-iyaniwura/hw08-seed-master/bcl")
rsconnect::deployApp("~/Desktop/STAT545A/hw08-iyaniwura/hw08-seed-master/bcl/app")
runApp()
rsconnect::deployApp("~/Desktop/STAT545A/hw08-iyaniwura/hw08-seed-master/bcl/app")
rsconnect::deployApp("~/Desktop/STAT545A/hw08-iyaniwura/hw08-seed-master/bcl/app.R")
deployApp("~/Desktop/STAT545A/hw08-iyaniwura/hw08-seed-master/bcl/app.R")
deployApp("~/Desktop/STAT545A/hw08-iyaniwura/hw08-seed-master/bcl/app")
